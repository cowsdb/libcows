name: Build static libchdb.a

on:
  workflow_dispatch:

jobs:
  build_libchdb_linux:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: alpine:edge
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
    env:
      RUNNER_OS: ${{ matrix.os }}
    steps:
      - name: apk setup
        if: matrix.os == 'ubuntu-20.04'
        run: |
          apk add --allow-untrusted --update --no-cache clang cmake ccache python3 ninja gcc g++ build-base readline-dev nasm findutils zstd-dev findutils apache-arrow-dev apache-arrow grep librdkafka-dev protoc libprotoc ccache protobuf-dev gcompat git curl wget tar bash sudo libpthread-stubs
          git config --global --add safe.directory '*'
          ccache -s
      - name: Check out chdb
        uses: actions/checkout@master
        with:
          repository: chdb-io/chdb
      - name: Restore submodules cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: Update submodules if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git submodule update --init --recursive --jobs 4
      - name: Save submodules cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}
          max-size: 5G
          append-timestamp: true
      - name: Patch
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo sed -i "s/\${PYINIT_ENTRY}//g" ./chdb/build.sh
          sudo sed -i "s/USE_MUSL=0/USE_MUSL=1/g" ./chdb/build.sh
          sudo sed -i "s/DGLIBC_COMPATIBILITY=1/DGLIBC_COMPATIBILITY=0 -DUSE_MUSL=1/g" ./chdb/build.sh
          sudo sed -i "s/ENABLE_EMBEDDED_COMPILER=1/ENABLE_EMBEDDED_COMPILER=0/g" ./chdb/build.sh
          sudo sed -i "s/ENABLE_SQLITE=1/ENABLE_SQLITE=0/g" ./chdb/build.sh
          sudo sed -i "s/ENABLE_THRIFT=1/ENABLE_THRIFT=0/g" ./chdb/build.sh
          sudo sed -i "s/\# strip/strip/g" ./chdb/build.sh
          sudo sed -i "s/\${CMAKE_TOOLCHAIN_FILE}/-DCMAKE_BUILD_TYPE=Release -DENABLE_CLICKHOUSE_ALL=OFF -DENABLE_CLICKHOUSE_LOCAL=ON -DENABLE_CLICKHOUSE_SELF_EXTRACTING=OFF -DENABLE_CLICKHOUSE_BENCHMARK=OFF -DENABLE_CLICKHOUSE_KEEPER=OFF -DENABLE_CLICKHOUSE_KEEPER_CONVERTER=OFF -DENABLE_CLICKHOUSE_INSTALL=OFF -DENABLE_CLICKHOUSE_TEST=OFF -DENABLE_CLICKHOUSE_DISKS=OFF -DENABLE_CLICKHOUSE_COPIER=OFF -DENABLE_CLICKHOUSE_COMPRESSOR=OFF -DENABLE_CLICKHOUSE_STATIC_FILES_DISK_UPLOADER=OFF -DENABLE_CLICKHOUSE_ODBC_BRIDGE=OFF -DENABLE_AVX=ON -DENABLE_AVX2=OFF -DENABLE_LIBRARIES=OFF -DENABLE_PROTOBUF=ON -DENABLE_SIMDJSON=ON -DENABLE_RAPIDJSON=OFF -DENABLE_BROTLI=ON -DENABLE_PARQUET=ON -DENABLE_UTILS=OFF -DUSE_UNWIND=ON -DUSE_SENTRY=0 -DUSE_STATIC_LIBRARIES=ON -DUSE_AWS_S3=ON -DUSE_ARROW=0 -DUSE_PROTOBUF=0 -DUSE_PARQUET=1 -DUSE_BROTLI=0 -DENABLE_PARQUET=ON -DENABLE_THRIFT=ON -DENABLE_TESTS=OFF -DENABLE_EMBEDDED_COMPILER=0 -DENABLE_RDKAFKA=0 -DENABLE_POCO_MONGODB=0 -DENABLE_POCO_REDIS=0 -DENABLE_ODBC=0 -DENABLE_MYSQL=0 -DENABLE_AWS_S3=ON -DENABLE_GRPC=0 -DENABLE_HDFS=0 -DENABLE_AZURE_BLOB_STORAGE=0 -DENABLE_CASSANDRA=0 \-DENABLE_KRB5=0 -DENABLE_ODBC=0 -DENABLE_AMQPCPP=0 -DENABLE_LDAP=0 -DCOMPILER_CACHE=ccache -DENABLE_SSL=ON/g ./chdb/build.sh
          sudo sed -i "s/CHDB_PY_MODULE.*/CHDB_PY_MODULE=libchdb.so/g" ./chdb/vars.sh
          cat ./chdb/build.sh
      - name: Install python
        run: apk add --no-cache python3 py3-pip
      - name: Run chdb/build.sh
        run: |
          python3 -m pip install pybind11
          bash ./chdb/build.sh
        continue-on-error: false
      - name: Check ccache statistics
        run: |
          ccache -s
          ls -lh chdb
          df -h
      - name: Strip & Compress Library
        run: |
          sudo strip ./chdb/libchdb.so
          cd chdb && sudo zip -r ./libchdb.zip ./libchdb.so
      - uses: actions/upload-artifact@v3
        with:
          name: libchdb
          path: ./chdb/libchdb.zip
          retention-days: 1
