name: Build static libchdb.a

on:
  workflow_dispatch:

jobs:
  build_libchdb_static_linux:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
    env:
      RUNNER_OS: ${{ matrix.os }}
    steps:
      - name: Install clang++ for Ubuntu
        if: matrix.os == 'ubuntu-20.04'
        run: |
          pwd
          uname -a
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 15
          which clang++-15
          clang++-15 --version
          sudo apt-get install -y make cmake ccache ninja-build yasm gawk wget
          echo "MUSL IT UP"
          sudo apt install -y --no-install-recommends musl musl-dev musl-tools
          export CC=musl-gcc 
          export CFLAGS=-O3 
          export LDFLAGS=-static
          ccache -s
      - name: Update git
        run: |
          sudo add-apt-repository ppa:git-core/ppa -y
          sudo apt-get update
          sudo apt-get install -y git
          git --version
      - name: Check out chdb
        uses: actions/checkout@master
        with:
          repository: chdb-io/chdb
      - name: Restore submodules cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: Update submodules if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git submodule update --init --recursive --jobs 4
      - name: Save submodules cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}
          max-size: 5G
          append-timestamp: true
      - name: remove old clang and link clang-15 to clang
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo rm /usr/bin/clang
          sudo ln -s /usr/bin/clang-15 /usr/bin/clang
          sudo rm /usr/bin/clang++
          sudo ln -s /usr/bin/clang++-15 /usr/bin/clang++
          which clang++
          clang++ --version
      - name: Patch
        if: matrix.os == 'ubuntu-20.04'
        run: |
          sudo sed -i "s/\${PYINIT_ENTRY}//g" ./chdb/build.sh
          sudo sed -i "s/\# strip/strip/g" ./chdb/build.sh
          sudo sed -i "s/CHDB_PY_MODULE.*/CHDB_PY_MODULE=libchdb.a/g" ./chdb/vars.sh
          sudo sed -i 's/-shared//g' ./chdb/build.sh
          sudo sed -i 's/-Wl,--exclude-libs,ALL//g' ./chdb/build.sh
          sudo sed -i 's/-stdlib=libstdc++ -static-libstdc++ -static-libgcc/-Wl,-Bstatic -lstdc++ -lgcc/g' ./chdb/build.sh
          sudo sed -i 's/-DGLIBC_COMPATIBILITY=1/-DGLIBC_COMPATIBILITY=0 -DUSE_MUSL=1/g' ./chdb/build.sh
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: "${{ matrix.python-version }}"
      - name: Run chdb/build.sh
        run: |
          python3 -m pip install pybind11
          # export CC=/usr/bin/clang
          # export CXX=/usr/bin/clang++
          export CC=musl-gcc
          export CXX=musl-g++
          export CFLAGS=-O3 
          export LDFLAGS=-static
          bash ./chdb/build.sh
        continue-on-error: false
      - name: Check ccache statistics
        run: |
          ccache -s
      - name: Strip & Compress Library
        run: |
          ls -lh chdb
          strip ./chdb/libchdb.a
          ldd ./chdb/libchdb.a
          cd chdb && sudo zip -r ./libchdb_static.zip ./libchdb.a
      - uses: actions/upload-artifact@v3
        with:
          name: libchdb
          path: ./chdb/libchdb_static.zip
          retention-days: 1
