name: Build static libchdb.a

on:
  workflow_dispatch:

jobs:
  build_libchdb_linux:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    container: alpine:edge
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-20.04 ]
    env:
      RUNNER_OS: ${{ matrix.os }}
    steps:
      - name: apk setup
        if: matrix.os == 'ubuntu-20.04'
        run: |
          apk add --allow-untrusted --update --no-cache clang cmake ccache python3 py3-pip ninja gcc g++ build-base readline-dev nasm findutils zstd-dev findutils apache-arrow-dev apache-arrow grep librdkafka-dev protoc libprotoc ccache protobuf-dev libc6-compat git curl wget tar bash sudo
          git config --global --add safe.directory '*'
          ccache -s
      - name: Check out chdb
        uses: actions/checkout@master
        with:
          repository: chdb-io/chdb
      - name: Restore submodules cache
        uses: actions/cache/restore@v3
        id: cache
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: Update submodules if cache miss
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          git submodule update --init --recursive --jobs 4
      - name: Save submodules cache
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            contrib/**
          key: |
            submodule-${{ hashFiles('.gitmodules') }}
      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ matrix.os }}
          max-size: 5G
          append-timestamp: true
      - name: Patch
        run: |
          sudo sed -i "s/\${PYINIT_ENTRY}//g" ./chdb/build.sh
          sudo sed -i "s/DGLIBC_COMPATIBILITY=1/DGLIBC_COMPATIBILITY=0/g" ./chdb/build.sh
          sudo sed -i "s/ENABLE_SQLITE=1/ENABLE_SQLITE=0/g" ./chdb/build.sh
          sudo sed -i "s/\# strip/strip/g" ./chdb/build.sh
          sudo sed -i "s/CHDB_PY_MODULE.*/CHDB_PY_MODULE=libchdb.so/g" ./chdb/vars.sh
          cat ./chdb/build.sh
      - name: Install pybind
        run: |
          python3 -m pip install pybind11
      - name: Run chdb/build.sh
        run: |
          bash ./chdb/build.sh
        continue-on-error: false
      - name: Check ccache statistics
        run: |
          ccache -s
          ls -lh chdb
          df -h
      - name: Strip & Compress Library
        run: |
          sudo strip ./chdb/libchdb.so
          cd chdb && sudo zip -r ./libchdb.zip ./libchdb.so
      - uses: actions/upload-artifact@v3
        with:
          name: libchdb
          path: ./chdb/libchdb.zip
          retention-days: 1
